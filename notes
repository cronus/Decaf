1. final and finally
    final can be used to make a variable "unchangable"
        private final String name = "foo"; // the reference name can never change
    
    final can also make a method not "overrideable"
        public final String toString() { return "NULL";}
    
    final can also make a class not "inheritable". i.e. the class cannot be subclassed
        public final class finalClass {...}
        public class classNotAllowed extends finalClass {...} // Not allowed
    
    finally
        finally is used in a try/catch statement to execute code "always"
        lock.lock()
        try {
          // do stuff
        } catch (SomeException se) {
          // handle se
        } finally {
            lock.unlock(); // always executed, even if Exception or Error or se
        }

2. redirect to /dev/null
     redirect stdout to /dev/null, i.e. discard/silent the output by command
